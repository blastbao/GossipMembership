// Code generated by protoc-gen-go.
// source: Member.proto
// DO NOT EDIT!

/*
Package gossip is a generated protocol buffer package.

It is generated from these files:
	Member.proto

It has these top-level messages:
	Member
	MemberList
*/
package gossip

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Member struct {
	Address   string `protobuf:"bytes,1,opt,name=Address,json=address" json:"Address,omitempty"`
	Heartbeat int64  `protobuf:"varint,2,opt,name=Heartbeat,json=heartbeat" json:"Heartbeat,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=Timestamp,json=timestamp" json:"Timestamp,omitempty"`
	Alive     bool   `protobuf:"varint,4,opt,name=Alive,json=alive" json:"Alive,omitempty"`
}

func (m *Member) Reset()                    { *m = Member{} }
func (m *Member) String() string            { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()               {}
func (*Member) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MemberList struct {
	List []*Member `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *MemberList) Reset()                    { *m = MemberList{} }
func (m *MemberList) String() string            { return proto.CompactTextString(m) }
func (*MemberList) ProtoMessage()               {}
func (*MemberList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MemberList) GetList() []*Member {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*Member)(nil), "gossip.Member")
	proto.RegisterType((*MemberList)(nil), "gossip.MemberList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Node service

type NodeClient interface {
	Ping(ctx context.Context, in *MemberList, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	Join(ctx context.Context, in *Member, opts ...grpc.CallOption) (*MemberList, error)
	NotifyLeave(ctx context.Context, in *Member, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) Ping(ctx context.Context, in *MemberList, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/gossip.Node/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) Join(ctx context.Context, in *Member, opts ...grpc.CallOption) (*MemberList, error) {
	out := new(MemberList)
	err := grpc.Invoke(ctx, "/gossip.Node/Join", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) NotifyLeave(ctx context.Context, in *Member, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/gossip.Node/NotifyLeave", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Node service

type NodeServer interface {
	Ping(context.Context, *MemberList) (*google_protobuf.Empty, error)
	Join(context.Context, *Member) (*MemberList, error)
	NotifyLeave(context.Context, *Member) (*google_protobuf.Empty, error)
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MemberList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gossip.Node/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Ping(ctx, req.(*MemberList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_Join_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Member)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Join(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gossip.Node/Join",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Join(ctx, req.(*Member))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_NotifyLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Member)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).NotifyLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gossip.Node/NotifyLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).NotifyLeave(ctx, req.(*Member))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gossip.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Node_Ping_Handler,
		},
		{
			MethodName: "Join",
			Handler:    _Node_Join_Handler,
		},
		{
			MethodName: "NotifyLeave",
			Handler:    _Node_NotifyLeave_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("Member.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x8f, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xbb, 0x36, 0x4d, 0xcd, 0x54, 0x3c, 0x0c, 0x22, 0x4b, 0xf4, 0x10, 0x72, 0xca, 0x41,
	0xb6, 0x52, 0x05, 0xcf, 0x3d, 0x08, 0x22, 0xb5, 0x48, 0xf0, 0x0b, 0x6c, 0xc8, 0x34, 0x2e, 0x24,
	0xdd, 0x90, 0x1d, 0x0b, 0xfd, 0x3c, 0x7e, 0x51, 0x49, 0x96, 0x1c, 0xfc, 0x77, 0x9c, 0xdf, 0x7b,
	0xf3, 0x66, 0x1e, 0x9c, 0xbd, 0x50, 0x53, 0x50, 0xa7, 0xda, 0xce, 0xb2, 0xc5, 0xb0, 0xb2, 0xce,
	0x99, 0x36, 0xbe, 0xaa, 0xac, 0xad, 0x6a, 0x5a, 0x0e, 0xb4, 0xf8, 0xd8, 0x2d, 0x1f, 0x9b, 0x96,
	0x8f, 0xde, 0x94, 0x32, 0x84, 0x7e, 0x09, 0x25, 0xcc, 0xd7, 0x65, 0xd9, 0x91, 0x73, 0x52, 0x24,
	0x22, 0x8b, 0xf2, 0xb9, 0xf6, 0x23, 0x5e, 0x43, 0xf4, 0x44, 0xba, 0xe3, 0x82, 0x34, 0xcb, 0x93,
	0x44, 0x64, 0xd3, 0x3c, 0x7a, 0x1f, 0x41, 0xaf, 0xbe, 0x99, 0x86, 0x1c, 0xeb, 0xa6, 0x95, 0x53,
	0xaf, 0xf2, 0x08, 0xf0, 0x02, 0x66, 0xeb, 0xda, 0x1c, 0x48, 0x06, 0x89, 0xc8, 0x4e, 0xf3, 0x99,
	0xee, 0x87, 0xf4, 0x16, 0xc0, 0x5f, 0xdd, 0x18, 0xc7, 0x98, 0x42, 0x50, 0x1b, 0xc7, 0x52, 0x24,
	0xd3, 0x6c, 0xb1, 0x3a, 0x57, 0xfe, 0x6f, 0xe5, 0x1d, 0xf9, 0xa0, 0xad, 0x3e, 0x05, 0x04, 0x5b,
	0x5b, 0x12, 0xde, 0x43, 0xf0, 0x6a, 0xf6, 0x15, 0xe2, 0x77, 0x5b, 0x1f, 0x14, 0x5f, 0x2a, 0x5f,
	0x55, 0x8d, 0x55, 0xd5, 0x50, 0x35, 0x9d, 0xe0, 0x0d, 0x04, 0xcf, 0xd6, 0xec, 0xf1, 0x47, 0x78,
	0xfc, 0x47, 0x4a, 0x3a, 0xc1, 0x07, 0x58, 0x6c, 0x2d, 0x9b, 0xdd, 0x71, 0x43, 0xfa, 0x40, 0xbf,
	0x96, 0xfe, 0x3d, 0x53, 0x84, 0x03, 0xb9, 0xfb, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x3b, 0xe9,
	0xdf, 0x89, 0x01, 0x00, 0x00,
}
